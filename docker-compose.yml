version: '3.5'

services:
  adminer:
    image: adminer
    ports:
      - "8070:8080"

  cassandra:
    image: cassandra:4.0
    ports:
      - "9042:9042"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    restart: always
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0

  postgres:
    image: postgres:12
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    restart: always

  registry:
    image: registry:2
    ports:
      - "5000:5000"
    restart: always

  slurm:
    build:
      context: .
      dockerfile: Dockerfile.slurm
    privileged: true
    ports:
      - "10022:22"
    restart: always

  vault:
    image: vault:1.5.3
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    restart: always
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: mytoken

  xenon:
    image: onnovalkering/xenon-grpc
    ports:
      - "50051:50051"
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    restart: always

networks:
  default:
    external:
      name: kind
