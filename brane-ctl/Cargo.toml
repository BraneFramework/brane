[package]
name = "brane-ctl"
edition = "2021"
authors = [ "Tim MÃ¼ller" ]
default-run = "branectl"
rust-version = "1.82"
version.workspace = true
repository.workspace = true
license.workspace = true

[[bin]]
name = "branectl"
path = "src/main.rs"

[dependencies]
base16ct = { version = "0.2.0", features = ["std"] }
base64ct = "1.6.0"
bollard = "0.18.0"
chrono = "0.4.39"
clap = { version = "4.5.6", features = ["derive","env"] }
console = "0.15.5"
dialoguer = "0.11.0"
diesel_migrations = "2.2.0"
dirs = "6.0.0"
dotenvy = "0.15.0"
# eflint-to-json = { git = "https://github.com/braneframework/policy-reasoner" }
enum-debug.workspace = true
error-trace.workspace = true
humanlog.workspace = true
humantime = "2.1.0"
human-panic = "2.0.0"
jsonwebtoken = "9.2.0"
lazy_static = "1.4.0"
log = "0.4.22"
names.workspace = true
# policy = { git = "https://github.com/braneframework/policy-reasoner" }
# srv = { git = "https://github.com/braneframework/policy-reasoner" }
rand = "0.9.0"
serde = { version = "1.0.204", features = ["derive"] }
serde_json = { version = "1.0.120", features = ["raw_value"] }
serde_yaml = { version = "0.0.10", package = "serde_yml" }
shlex = "1.1.0"
tempfile = "3.10.1"
thiserror = "2.0.0"
tokio = { version = "1.38.0", features = [] }

# Workspace dependencies
# Note that this crate needs a root store because it can download from the internet
reqwest = { workspace = true, features = ["rustls-tls-webpki-roots"] }

# eflint-json = { git = "https://gitlab.com/eflint/json-spec-rs", features = ["v0_1_0_srv"] }
# eflint-to-json = { git = "https://gitlab.com/eflint/eflint-to-json-rs", features = ["async-tokio"] }
policy-store = { git = "https://github.com/BraneFramework/policy-store", features = ["sqlite-database", "sqlite-database-embedded-migrations"] }

brane-cfg = { path = "../brane-cfg" }
brane-shr = { path = "../brane-shr" }
brane-tsk = { path = "../brane-tsk" }
specifications = { path = "../specifications" }


[build-dependencies]
download.workspace = true
hex-literal = "0.4.0"
clap = { version = "4.5.6", features = ["derive","env"] }

[lints]
workspace = true
