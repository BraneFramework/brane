[workspace]
resolver = "2"
members = [
    ### OVERVIEW ###
    "overview",


    ### BINARIES ###
    # These crates directly relate to the CTL tool
    "brane-ctl",

    # These crates directly relate to the CLI tool
    "brane-cli",

    # These crates directly relate to the `branec` tool
    "brane-cc",


    ### SERVICES ###
    # These crates implement services for central nodes
    "brane-drv",
    "brane-plr",
    "brane-api",

    # These crates implement services for worker nodes
    "brane-job",
    "brane-reg",
    "brane-chk",
    "brane-let", # Not a service, container-local binary

    # These crates implement services that occur on any type of node
    "brane-prx",


    ### C-INTERFACES ###
    # These crates provide C-compatible interfaces to other libraries
    "brane-cli-c",


    ### LIBRARIES ###
    # These crates provide the full BraneScript/Bakery/... stack
    "brane-tsk",
    "brane-exe",
    "brane-ast",
    "brane-dsl",

    # These crates provide specifications / general implementations
    "brane-cfg",
    "brane-shr",
    "specifications",

    # # TODO
    # "brane-log",

    "xtask",
]


[workspace.package]
version = "4.0.0"
edition = "2021"
authors = ["Onno Valkering", "Tim MÃ¼ller", "Daniel Voogsgerd"]
description = "The Brane Framework is a workflow execution system that is capable of dealing with sensitive dataset. Created for the [EPI project](https://enablingpersonalizedinterventions.nl)."
repository = "https://github.com/braneframework/brane"
documentation = "https://wiki.enablingpersonalizedinterventions.nl"
license = "Apache-2.0"

[workspace.dependencies]
# Lut99 Crates
download = { git = "https://github.com/Lut99/download-rs", tag = "v0.1.0", default-features = false, features = [
    "download",
] }
enum-debug = { git = "https://github.com/Lut99/enum-debug", tag = "v1.1.0", features = ["derive"] }
error-trace = "3.3.1"
humanlog = { git = "https://github.com/Lut99/humanlog-rs", tag = "v0.2.0" }
names = { git = "https://github.com/Lut99/names-rs", tag = "v0.1.0", default-features = false, features = [
    "rand",
    "three-lowercase",
] }
transform = { git = "https://github.com/Lut99/transform-rs", tag = "v0.2.0" }
# Note: This does not use any root store by default. This will have to be enabled *explicitly* by the workspace member.
anyhow = { version = "1.0.66" }
async-trait = { version = "0.1.67" }
axum = { version = "0.8.0" }
base64 = { version = "0.22.0" }
chrono = { version = "0.4.30" }
clap = { version = "4.5.0", features = ["derive", "env"] }
dotenvy = { version = "0.15" }
env_logger = { version = "0.11.0" }
futures = { version = "0.3.22" }
http = { version = "1.0.0" }
hyper = { version = "1.3.0" }
lazy_static = { version = "1.5.0" }
log = { version = "0.4.22" }
miette = { version = "7.0.0" }
parking_lot = { version = "0.12.1" }
prost = { version = "0.13.2" }
rand = { version = "0.9.0" }
regex = { version = "1.5.0" }
reqwest = { version = "0.12.0", features = ["rustls-tls-webpki-roots"], default-features = false }
rustls = { version = "0.21.6" }
serde = { version = " 1.0.195" }
serde_json = { version = "1.0.50" }
serde_yaml = { version = "0.10.0", package = "serde_yaml_ng" }
strum = { version = "0.27.0" }
thiserror = { version = "2.0.0" }
tokio = { version = "1.44.2", default-features = false }
tonic = { version = "0.13.0" }
tracing = { version = "0.1.37" }
tracing-subscriber = { version = "0.3.10", features = ["env-filter"] }
warp = { version = "0.3.2" }

# Brane
brane-ast = { path = "brane-ast" }
brane-cc = { path = "brane-cc" }
brane-cfg = { path = "brane-cfg" }
brane-chk = { path = "brane-chk" }
brane-cli = { path = "brane-cli" }
brane-ctl = { path = "brane-ctl" }
brane-dsl = { path = "brane-dsl" }
brane-exe = { path = "brane-exe" }
brane-prx = { path = "brane-prx" }
brane-shr = { path = "brane-shr" }
brane-tsk = { path = "brane-tsk" }
specifications = { path = "specifications" }

# Other BraneFramework / EPI dependencies
policy-reasoner = { git = "https://github.com/BraneFramework/policy-reasoner.git", default-features = false }
policy-store = { git = "https://github.com/BraneFramework/policy-store.git", default-features = false }

[workspace.lints.clippy]
result_large_err = { level = "allow", priority = 1 }
suspicious = "deny"
