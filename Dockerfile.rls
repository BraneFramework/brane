# DOCKERFILE.rls for BRANE
#   by Tim MÃ¼ller and Onno Valkering
#
# Contains the Dockerfile for the various Brane instance images.
#
# This version builds the release images. For images build in development mode,
# check Dockerfile.dev.
#


##### BUILD STAGE #####
# This file will build the entire instance.
FROM rust:1 AS build
LABEL org.opencontainers.image.source https://github.com/epi-project/brane

# Install build dependencies (that are not in the rust image already)
RUN apt-get update && apt-get install -y \
    cmake \
 && rm -rf /var/lib/apt/lists/*

# Copy over relevant crates
RUN mkdir /build
COPY ./brane-api /build/brane-api
COPY ./brane-ast /build/brane-ast
COPY ./brane-cfg /build/brane-cfg
COPY ./brane-drv /build/brane-drv
COPY ./brane-dsl /build/brane-dsl
COPY ./brane-exe /build/brane-exe
COPY ./brane-job /build/brane-job
COPY ./brane-log /build/brane-log
COPY ./brane-plr /build/brane-plr
COPY ./brane-prx /build/brane-prx
COPY ./brane-reg /build/brane-reg
COPY ./brane-shr /build/brane-shr
COPY ./specifications /build/specifications

# Generate a workspace file
RUN echo "[workspace]\n" \
         "members = [\n" \
         "    \"brane-api\",\n" \
         "    \"brane-ast\",\n" \
         "    \"brane-cfg\",\n" \
         "    \"brane-drv\",\n" \
         "    \"brane-dsl\",\n" \
         "    \"brane-exe\",\n" \
         "    \"brane-job\",\n" \
         "    \"brane-log\",\n" \
         "    \"brane-plr\",\n" \
         "    \"brane-prx\",\n" \
         "    \"brane-reg\",\n" \
         "    \"brane-shr\",\n" \
         "    \"specifications\",\n" \
         "]\n" > /build/Cargo.toml

# Build optimized binaries
WORKDIR /build
RUN cargo build \
        --release \
        --package brane-api \
        --package brane-drv \
        --package brane-job \
        --package brane-log \
        --package brane-prx \
        --package brane-plr \
        --package brane-reg \
    && mv ./target/release/brane-api /brane-api \
    && mv ./target/release/brane-drv /brane-drv \
    && mv ./target/release/brane-job /brane-job \
    && mv ./target/release/brane-log /brane-log \
    && mv ./target/release/brane-plr /brane-prx \
    && mv ./target/release/brane-plr /brane-plr \
    && mv ./target/release/brane-reg /brane-reg \
    && rm -rf /usr/local/cargo/registry \
    && rm -rf ./target

# If ever run, run a shell
WORKDIR /
ENTRYPOINT [ "/bin/bash" ]





##### BASE IMAGE #####
# This image defines the base image for all Brane service images.
# Note: we don't do 20.04 because the skopeo alternative link has died
# Note: we'd like to go to 22.04, but for now this is in conflict with OpenSSL
FROM ubuntu:22.04 AS brane-base
LABEL org.opencontainers.image.source https://github.com/epi-project/brane

# Add an ubuntu 21.10 source for libssl1.1 (insecure, but it's the dev image anyway)
RUN echo "deb http://old-releases.ubuntu.com/ubuntu impish-security main" >> /etc/apt/sources.list

# Install libssl (the Rust crate depends on it)
RUN apt-get update && apt-get install -y \
    libssl1.1 \
 && rm -rf /var/lib/apt/lists/*

# If ever run, run a shell
ENTRYPOINT [ "/bin/bash" ]





##### BRANE-PRX #####
# This image contains the Brane proxy service.
FROM brane-base AS brane-prx

# Copy `brane-prx` from build stage
COPY --from=build /brane-prx /brane-prx

# Run the compiled executable as base
ENTRYPOINT [ "./brane-prx" ]





##### BRANE-API #####
# This image contains the Brane API service.
FROM brane-base AS brane-api

# Install additional runtime dependencies specific for brane-api
RUN apt-get update && apt-get install -y \
    gnupg2 \
    wget \
 && rm -rf /var/lib/apt/lists/*

# Copy `brane-api` from build stage
COPY --from=build /brane-api /brane-api

# Run the compiled executable as base
ENTRYPOINT [ "/brane-api" ]





##### BRANE-DRV #####
# This image contains the Brane driver service.
FROM brane-base AS brane-drv

# Copy `brane-drv` from build stage
COPY --from=build /brane-drv /brane-drv

# Run the compiled executable as base
ENTRYPOINT [ "./brane-drv" ]





##### BRANE-PLR #####
# This image contains the Brane planner service.
FROM brane-base AS brane-plr

# Copy `brane-plr` from build stage
COPY --from=build /brane-plr /brane-plr

# Run the compiled executable as base
ENTRYPOINT [ "./brane-plr" ]





##### BRANE-JOB #####
# This image contains the Brane job service.
FROM brane-base AS brane-job

# Copy `brane-job` from build stage
COPY --from=build /brane-job /brane-job

# Run the compiled executable as base
ENTRYPOINT [ "./brane-job" ]





##### BRANE-REG #####
# This image contains the Brane registry service.
FROM brane-base AS brane-reg

# Copy `brane-reg` from build stage
COPY --from=build /brane-reg /brane-reg

# Run the compiled executable as base
ENTRYPOINT [ "./brane-reg" ]
