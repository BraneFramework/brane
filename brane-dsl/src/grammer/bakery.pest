WHITESPACE  = _{ " " | "\t" }
COMMENT     = _{ "//" ~ (!"\n" ~ ANY)* }

program = _{ SOI ~ "\n"* ~ (statement ~ "\n"+) * ~ statement? ~ EOI }
reserved = { "??" | "as" | "else" | "false" | "if" | "import" | "true" | "while" | "return" }

// Utilities
WS = _{ WHITESPACE }
NL = _{ NEWLINE }

// Statements
execution  = _{
      parameter
    | assignment
    | call
}
statement = _{
      condition
    | execution
    | import
    | repeat
    | terminate
}

assignment      = { name ~ ":=" ~ call }
call            = { term+ }
condition       = { "if" ~ call ~ ":" ~ execution ~ (NL ~ "else" ~ ":" ~ execution)? }
import          = { "import" ~ string ~ ("version" ~ string)? }
parameter       = { name ~ ":=" ~ "??" ~ "as" ~ complex }
complex         = @{ ASCII_ALPHA_UPPER ~ ASCII_ALPHA* ~ "[]"? }
repeat          = { "while" ~ call ~ ":" ~ execution }
terminate       = { "return" ~ call? }

// Terms
term            = { name | symbol | value }
value 		      = { array | object | literal }
literal         = { boolean | decimal | integer | string }
name            = @{ name_sg ~ ("." ~ name_sg)* }
name_sg         = @{ !reserved ~ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
symbol          = { "+"+ | "-"+ | "*"+ | "/"+ | "%"+ | "="+
                  | "<"+ | ">"+ | "="+ | "&"+ | "|"+ | "!"+ }

// Literals
boolean         = { "true" | "false" }
decimal         = @{ "-"? ~ ASCII_DIGIT* ~ "." ~ ASCII_DIGIT+ }
integer         = @{ "-"? ~ ASCII_DIGIT+ }
string          = { string_sq | string_dq }
string_sq       = { "'" ~ (!"'" ~ ANY)* ~ "'" }
string_dq       = { "\"" ~ (!"\"" ~ ANY)* ~ "\"" }

// Structures
array 		      = { "[" ~ NL* ~ "]" | "[" ~ NL* ~ value ~ ("," ~ NL* ~ value)* ~ NL* ~ "]" }
object 		      = { "{" ~ NL* ~ "}" | "{" ~ NL* ~ entry ~ ("," ~ NL* ~ entry)* ~ NL* ~ "}" }
entry 		      = { name ~ ":" ~ value }
