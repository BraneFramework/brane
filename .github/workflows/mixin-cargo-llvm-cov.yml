name: Test coverage

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      rust-version:
        required: false
        type: string

jobs:
  cargo-test-coverage:
    name: "${{ inputs.os }} / ${{ inputs.rust-version }}"
    runs-on: ${{ inputs.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Note: Maybe this is done by rustup implicitly
      # - name: Install rust toolchain
      #   uses: dtolnay/rust-toolchain@master
      #   if: inputs.rust-version != ''
      #   with:
      #     toolchain: ${{ inputs.rust-version }}

      - name: Override active rustup toolchain
        if: inputs.rust-version != ''
        run: echo "RUSTUP_TOOLCHAIN=${{ inputs.rust-version }}" >> $GITHUB_ENV

      - name: Show toolchain
        run: rustup show active-toolchain

      - name: Install dependencies
        if: startsWith(inputs.os, 'ubuntu-')
        run: sudo apt update && sudo apt install -y libsqlite3-dev

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --codecov --output-path codecov.json

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: BraneFramework/brane
          files: codecov.json
          fail_ci_if_error: true
