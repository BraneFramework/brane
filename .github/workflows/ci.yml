name: CI
on:
  pull_request: 
  push:

jobs:
  unit-tests-linux:
    name: Unit Tests (linux)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Installing dependencies to build `protoc`...
        run: sudo apt-get update && sudo apt-get install -y curl cmake gcc g++ make

      - name: Install `protoc` to compile protobuf files
        run: |
          curl -L https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.21.11.tar.gz | tar -xvz \
          && cd /protobuf-3.21.11 \
          && cmake -Dprotobuf_BUILD_TESTS=off . \
          && cmake --build . -j $(nproc) \
          && mv $(readlink protoc) /usr/bin/protoc \
          && cd / \
          && rm -r /protobuf-3.21.11

      - name: Build project
        run: cargo build -v
      
      - name: Run unit tests
        run: cargo test -v --lib

  unit-tests-macos:
    name: Unit Tests (macos)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install `protoc` to compile protobuf files
        run: brew install protobuf
      
      - name: Build project
        run: cargo build -v
      
      - name: Run unit tests
        run: cargo test -v --lib


  # integration-tests:
  #   name: Integration Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1

  #     - name: Install dependencies
  #       run: sudo apt-get install -y libpq-dev libssl-dev

  #     - name: Setup environment
  #       run: docker-compose up -d

  #     - name: Build project
  #       run: cargo test -v --no-run

  #     - name: Run integration tests
  #       run: cargo test -v
