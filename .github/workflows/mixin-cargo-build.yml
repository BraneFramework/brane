name: Cargo Build

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      rust-version:
        required: false
        type: string
      packages:
        required: true
        type: string
      cache:
        required: false
        type: boolean
        default: false

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  RUSTDOCFLAGS: -Dwarnings

jobs:
  cargo-build:
    name: "${{ inputs.packages }} / ${{ inputs.os }}"
    runs-on: ${{ inputs.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Override active rustup toolchain
        if: inputs.rust-version != ''
        run: echo "RUSTUP_TOOLCHAIN=${{ inputs.rust-version }}" >> $GITHUB_ENV

      - name: Show toolchain
        run: rustup show active-toolchain

      - name: Set up Docker Buildx
        if: startsWith(inputs.os, 'ubuntu-')
        uses: docker/setup-buildx-action@v3

      - name: Install Go
        if: startsWith(inputs.os, 'macos-')
        uses: actions/setup-go@v6
        with:
          go-version: '^1.23.4'

      - name: Install dependencies
        if: startsWith(inputs.os, 'ubuntu-')
        run: sudo apt update && sudo apt install -y libsqlite3-dev

      - name: Cache dependencies
        if: inputs.cache
        uses: Swatinem/rust-cache@v2

      - name: Build Workspace
        run: cargo run --release --no-default-features -F ci --package xtask build all
