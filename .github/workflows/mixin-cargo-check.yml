name: Cargo Check & Build

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      rust-version:
        required: true
        type: string
      packages:
        required: true
        type: string

jobs:
  cargo-check:
    name: "${{ inputs.os }} / ${{ inputs.rust-version }} / ${{ inputs.packages }}"
    runs-on: ${{ inputs.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.rust-version }}
          components: rustfmt, clippy

      - name: Install dependencies
        if: startsWith(inputs.os, 'ubuntu-')
        run: sudo apt update && sudo apt install -y libsqlite3-dev

      - name: Install Cargo Hack
        uses: taiki-e/install-action@cargo-hack

      - name: Check project (Workspace)
        if: inputs.packages == 'workspace'
        run: cargo hack --feature-powerset check --workspace

      - name: Build project (Workspace)
        if: inputs.packages == 'workspace'
        run: cargo build --workspace

      - name: Check project (Frontend)
        if: inputs.packages == 'frontend'
        run: cargo hack --feature-powerset check --package brane-cli --package brane-cc --package brane-cli-c

      - name: Build project (Frontend)
        if: inputs.packages == 'frontend'
        run: cargo build --package brane-cli --package brane-cc --package brane-cli-c
